@page "/StoreSetup"
@layout LoginLayout
@inject HttpClient Http
@using System.Net.Http.Json
@using System.Text.Json
@using System.Threading
@using AdminPortal.Services
@inject Blazored.LocalStorage.ILocalStorageService localStore
@inject NavigationManager nav
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage



<div class="container justify-content-md-center"> 
    <div class="row justify-content-md-center">
    <img src="/images/store.png" class="img-fluid w-25" alt="my store">
@if (setStep ==0){
    <div class="container justify-content-md-center">
    <Carousel @bind-SelectedSlide="@selectedSlide">
    <CarouselSlide Name="1">
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Eum, saepe!</p>
    </CarouselSlide>
    <CarouselSlide Name="2">
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nobis suscipit velit excepturi? Totam, neque quaerat?</p>
    </CarouselSlide>
    <CarouselSlide Name="3">
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit, doloribus quam! Quam veritatis deleniti perspiciatis, ab aspernatur est soluta dicta?</p>
    </CarouselSlide>
    </Carousel>
    </div>

    <button type="button" class="btn btn-info align-middle" @onclick="@(() => ShowStep(1))">Start your Store</button>

} else if (setStep ==1){
    <div class="container justify-content-md-center">
        <div class="row ">
            <div class="col col-12 col-sm">
                <div class="card align-middle shadow-lg p-3 mb-5 bg-body rounded">
                    <div class="card-body">
                        <div class="row">
                            <div class="col col-12">
                                <div class="input-group mb-3">
                                    <InputextStoreName  @bind-Value="@storeShortName"  @bind-Value:event="ValueChanged"   />
                                </div>
                                <button type="button" class="btn btn-info align-middle" @onclick="@(() => ShowStep(2))">Next Step</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
        
    
} else if (setStep ==2){
        <div class="container justify-content-md-center">
            <StoreCreateForm OnValidSubmit="PostStoreRegistration" StoreData="StoreData"  StoreShortName="storeShortName" />
        </div>
}
    </div>
</div>

@if (loadingbit == 2) {
    <FaderCount>
        <Alerts  Htmlstring=@errorMesssage  AlertType ="danger" />
    </FaderCount>
}else if (loadingbit == 1){
    <FaderCount>
    <LoadingModal/>
    </FaderCount>
}

@code{
    private string selectedSlide = "3";
    int setStep = 0;
    private StoreRegistrationData StoreData = new StoreRegistrationData();
    string errorMesssage ="";
    int loadingbit = 0;
    string  ownerId ="";
    string storeShortName ="";
    async void ShowStep(int step){
        setStep = step;
        storeShortName = await localStore.GetItemAsStringAsync("StoreName");
    }
    private async Task PostStoreRegistration()
    {

        ownerId = await localStore.GetItemAsStringAsync("Id");
        storeShortName = await localStore.GetItemAsStringAsync("StoreName");
        loadingbit =1;
        var newStore =  new StoreRegistrationData {

            StoreName = StoreData.StoreName,
            StoreShortName= storeShortName,
            StoreFullDescription =StoreData.StoreFullDescription,
            StoreCreationDate = DateTime.UtcNow,
            StoreStatus = "Pending",
            UserId =  ownerId
        };
        Console.WriteLine($"Store : {newStore.StoreShortName}");
        var Uri =  "api/Store/CreateStore";
        var response = await Http.PostAsJsonAsync(Uri,newStore);
        var result = await response.Content.ReadFromJsonAsync<ResponseState>();
        Thread.Sleep(10000);
            var state = result.state;
            if (state == "Created"){
                nav.NavigateTo("/Index");
            } else  {
                loadingbit =2;
                errorMesssage = $"Error : Not Created";
            } 
    }

}