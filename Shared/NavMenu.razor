@using AdminPortal.Services
@inject Blazored.LocalStorage.ILocalStorageService localStore
@inject NavigationManager nav
@inject HttpClient http
@inject StoreDataService storeDataService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="Index">@storeName</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Index" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Store Center
            </NavLink>
        </li>
        <li class="nav-item px-3">
        <NavLink class="nav-link" href="Orders">
                <span class="oi oi-cart" aria-hidden="true"></span> Orders
        </NavLink> 
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Customers">
                <span class="oi oi-people" aria-hidden="true"></span> Customers
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Customers">
                <span class="oi oi-briefcase" aria-hidden="true" ></span> Suppliers
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Catalogs">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Catalogs
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Inventory">
                <span class="oi oi-vertical-align-bottom" aria-hidden="true"></span> Inventory
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Procurement">
                <span class="oi oi-basket" aria-hidden="true"></span> Procurement
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Reports">
            <span class="oi oi-pie-chart" aria-hidden="true" ></span> Reports
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="ItemTypePage">
            <span class="oi oi-pie-chart" aria-hidden="true" ></span> Item
            </NavLink>
        </li>

            <!--<li class="nav-item px-3">
                <Dropdown>
                <DropdownToggle Color="Color.Primary">
                    <span class="oi oi-grid-three-up" aria-hidden="true"></span> Master Data
                </DropdownToggle>
                <DropdownMenu>
                    <DropdownItem >
                        <label class="text-primary">Order Type</label>
                    </DropdownItem>
                    <DropdownDivider />
                    <DropdownItem ><label class="text-primary">Currencies</label></DropdownItem>
                    <DropdownDivider />
                    <DropdownItem ><label class="text-primary">Sales Categories</label></DropdownItem>
                    <DropdownDivider />
                    <DropdownItem ><label class="text-primary">Customer types</label></DropdownItem>
                    <DropdownDivider />
                    <DropdownItem ><label class="text-primary">Status types</label></DropdownItem>
                </DropdownMenu>
            </Dropdown>

            </li>-->
            <li class="nav-item px-3">
            <NavLink class="nav-link" href="StoreRules">
                    <span class="oi oi-cog" aria-hidden="true"></span> Store Rules
            </NavLink> 
            </li>   

    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    bool valtoken;
    string storeName ="";


    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        try {
        storeName = await storeDataService.getStoreName();
        valtoken = await sessionStorage.ContainKeyAsync("token");
    
        if (valtoken == false ) {
            nav.NavigateTo("/UserLogin");
        }

        } catch (Exception e) {
            if (e.Message.Length > 0){
                nav.NavigateTo("/UserLogin");
            }
        }
        

    }


}


    